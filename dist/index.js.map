{"version":3,"file":"index.js","sources":["../src/resources/shims/dirFileName.ts","../src/core/edge/lifecycle/preload.ts","../node_modules/edge-js/lib/edge.js","../src/core/edge/lifecycle/postload.ts","../src/core/edge/manager.ts","../src/index.ts"],"sourcesContent":["import { fileURLToPath } from 'url';\r\nimport * as pathTool from 'path';\r\n\r\nObject.defineProperties(globalThis, {\r\n\t__filename: {\r\n\t\tget: () => fileURLToPath(import.meta.url),\r\n\t\tenumerable: true,\r\n\t},\r\n\t__dirname: {\r\n\t\tget: () => pathTool.dirname(fileURLToPath(import.meta.url)),\r\n\t\tenumerable: true,\r\n\t},\r\n});\r\n","import '../../../resources/shims/dirFileName';\r\n\r\nprocess.env.EDGE_USE_CORECLR = '1';\r\nprocess.env.EDGE_APP_ROOT = `${__dirname}/lib/SS/bin/Release/net5.0`;\r\n","var fs = require('fs')\r\n    , path = require('path')\r\n    , builtEdge = path.resolve(__dirname, '../build/Release/' + (process.env.EDGE_USE_CORECLR || !fs.existsSync(path.resolve(__dirname, '../build/Release/edge_nativeclr.node')) ? 'edge_coreclr.node' : 'edge_nativeclr.node'))\r\n    , edge;\r\n\r\nvar versionMap = [\r\n    [ /^12\\./, '12.13.0' ],\r\n    [ /^14\\./, '14.17.4' ],\r\n    [ /^16\\./, '16.6.0' ],\r\n];\r\n\r\nfunction determineVersion() {\r\n    for (var i in versionMap) {\r\n        if (process.versions.node.match(versionMap[i][0])) {\r\n            return versionMap[i][1];\r\n        }\r\n    }\r\n\r\n    throw new Error('The edge module has not been pre-compiled for node.js version ' + process.version +\r\n        '. You must build a custom version of edge.node. Please refer to https://github.com/agracio/edge-js ' +\r\n        'for building instructions.');\r\n}\r\nvar edgeNative;\r\nif (process.env.EDGE_NATIVE) {\r\n    edgeNative = process.env.EDGE_NATIVE;\r\n}\r\nelse if (fs.existsSync(builtEdge)) {\r\n    edgeNative = builtEdge;\r\n}\r\nelse if (process.platform === 'win32') {\r\n    edgeNative = path.resolve(__dirname, './native/' + process.platform + '/' + process.arch + '/' + determineVersion() + '/' + (process.env.EDGE_USE_CORECLR ? 'edge_coreclr' : 'edge_nativeclr'));\r\n}\r\nelse {\r\n    throw new Error('The edge native module is not available at ' + builtEdge \r\n        + '. You can use EDGE_NATIVE environment variable to provide alternate location of edge.node. '\r\n        + 'If you need to build edge.node, follow build instructions for your platform at https://github.com/agracio/edge-js');\r\n}\r\nif (process.env.EDGE_DEBUG) {\r\n    console.log('Load edge native library from: ' + edgeNative);\r\n}\r\nif (edgeNative.match(/edge_coreclr\\.node$/i)) {\r\n    // Propagate the choice between desktop and coreclr to edge-cs; this is used in deciding\r\n    // how to compile literal C# at https://github.com/tjanczuk/edge-cs/blob/master/lib/edge-cs.js\r\n    process.env.EDGE_USE_CORECLR = 1;\r\n}\r\nif (process.env.EDGE_USE_CORECLR && !process.env.EDGE_BOOTSTRAP_DIR && fs.existsSync(path.join(__dirname, 'bootstrap', 'bin', 'Release', 'netcoreapp1.1', 'bootstrap.dll'))) {\r\n    process.env.EDGE_BOOTSTRAP_DIR = path.join(__dirname, 'bootstrap', 'bin', 'Release', 'netcoreapp1.1');\r\n}\r\n\r\nprocess.env.EDGE_NATIVE = edgeNative;\r\n\r\nedge = require(edgeNative);\r\n\r\nexports.func = function(language, options) {\r\n    if (!options) {\r\n        options = language;\r\n        language = 'cs';\r\n    }\r\n\r\n    if (typeof options === 'string') {\r\n        if (options.match(/\\.dll$/i)) {\r\n            options = { assemblyFile: options };\r\n        }\r\n        else {\r\n            options = { source: options };\r\n        }\r\n    }\r\n    else if (typeof options === 'function') {\r\n        var originalPrepareStackTrace = Error.prepareStackTrace;\r\n        var stack;\r\n        try {\r\n            Error.prepareStackTrace = function(error, stack) {\r\n                return stack;\r\n            };\r\n            stack = new Error().stack;\r\n        }\r\n        finally\r\n        {\r\n            Error.prepareStackTrace = originalPrepareStackTrace;\r\n        }\r\n        \r\n        options = { source: options, jsFileName: stack[1].getFileName(), jsLineNumber: stack[1].getLineNumber() };\r\n    }\r\n    else if (typeof options !== 'object') {\r\n        throw new Error('Specify the source code as string or provide an options object.');\r\n    }\r\n\r\n    if (typeof language !== 'string') {\r\n        throw new Error('The first argument must be a string identifying the language compiler to use.');\r\n    }\r\n    else if (!options.assemblyFile) {\r\n        var compilerName = 'edge-' + language.toLowerCase();\r\n        var compiler;\r\n        try {\r\n            compiler = require(compilerName);\r\n        }\r\n        catch (e) {\r\n            throw new Error(\"Unsupported language '\" + language + \"'. To compile script in language '\" + language +\r\n                \"' an npm module '\" + compilerName + \"' must be installed.\");\r\n        }\r\n\r\n        try {\r\n            options.compiler = compiler.getCompiler();\r\n        }\r\n        catch (e) {\r\n            throw new Error(\"The '\" + compilerName + \"' module required to compile the '\" + language + \"' language \" +\r\n                \"does not contain getCompiler() function.\");\r\n        }\r\n\r\n        if (typeof options.compiler !== 'string') {\r\n            throw new Error(\"The '\" + compilerName + \"' module required to compile the '\" + language + \"' language \" +\r\n                \"did not specify correct compiler package name or assembly.\");\r\n        }\r\n\r\n        if (process.env.EDGE_USE_CORECLR) {\r\n            var defaultManifest = path.join(__dirname, 'bootstrap', 'bin', 'Release', 'netcoreapp1.1', 'bootstrap.deps.json');\r\n            var compilerManifest;\r\n            if(compiler.getBootstrapDependencyManifest){\r\n                compilerManifest = compiler.getBootstrapDependencyManifest();\r\n            }\r\n            options.bootstrapDependencyManifest =\r\n                compilerManifest && fs.existsSync(compilerManifest)\r\n                ? compilerManifest\r\n                : defaultManifest;\r\n        }\r\n    }\r\n\r\n    if (!options.assemblyFile && !options.source) {\r\n        throw new Error('Provide DLL or source file name or .NET script literal as a string parmeter, or specify an options object '+\r\n            'with assemblyFile or source string property.');\r\n    }\r\n    else if (options.assemblyFile && options.source) {\r\n        throw new Error('Provide either an asseblyFile or source property, but not both.');\r\n    }\r\n\r\n    if (typeof options.source === 'function') {\r\n        var match = options.source.toString().match(/[^]*\\/\\*([^]*)\\*\\/\\s*\\}$/);\r\n        if (match) {\r\n            options.source = match[1];\r\n        }\r\n        else {\r\n            throw new Error('If .NET source is provided as JavaScript function, function body must be a /* ... */ comment.');\r\n        }\r\n    }\r\n\r\n    if (options.references !== undefined) {\r\n        if (!Array.isArray(options.references)) {\r\n            throw new Error('The references property must be an array of strings.');\r\n        }\r\n\r\n        options.references.forEach(function (ref) {\r\n            if (typeof ref !== 'string') {\r\n                throw new Error('The references property must be an array of strings.');\r\n            }\r\n        });\r\n    }\r\n\r\n    if (options.assemblyFile) {\r\n        if (!options.typeName) {\r\n            var matched = options.assemblyFile.match(/([^\\\\\\/]+)\\.dll$/i);\r\n            if (!matched) {\r\n                throw new Error('Unable to determine the namespace name based on assembly file name. ' +\r\n                    'Specify typeName parameter as a namespace qualified CLR type name of the application class.');\r\n            }\r\n\r\n            options.typeName = matched[1] + '.Startup';\r\n        }\r\n    }\r\n    else if (!options.typeName) {\r\n        options.typeName = \"Startup\";\r\n    }\r\n\r\n    if (!options.methodName) {\r\n        options.methodName = 'Invoke';\r\n    }\r\n\r\n    return edge.initializeClrFunc(options);\r\n};\r\n","import edge from 'edge-js';\r\nimport type { Context } from '../../items/context';\r\n\r\nedge.func<[Context], void>({\r\n\tassemblyFile: 'SS',\r\n\ttypeName: 'SS.Bridge',\r\n\tmethodName: 'InvokeLoad',\r\n})([{\r\n\tcurrentWorkingDirectory: process.cwd(),\r\n}], true);\r\n","import './lifecycle/preload';\r\nimport edge from 'edge-js';\r\nimport './lifecycle/postload';\r\n\r\nexport class EdgeManager {\r\n\tpublic static getEdgeInstance() {\r\n\t\treturn edge;\r\n\t}\r\n}\r\n","import { keys } from 'ts-transformer-keys';\r\nimport { EdgeManager } from './core/edge/manager';\r\nimport type { Configuration } from './core/items/configuration';\r\nimport type { MonitorInfo } from './core/items/monitorInfo';\r\n\r\nconst edge = EdgeManager.getEdgeInstance();\r\n\r\ntype Unpromisify<T extends (...args: any[]) => any> = (...args: Parameters<T>) => ReturnType<T> extends PromiseLike<infer U> ? U : T;\r\ntype UnpromisifyWindowsSS<T extends keyof WindowsSS> = Unpromisify<WindowsSS[T]>;\r\n\r\nexport class WindowsSS {}\r\n\r\nconst WindowsSSMethodNames = keys<WindowsSS>();\r\n\r\nexport class WindowsSSFactory {\r\n\tpublic create() {\r\n\t\tconst instance = new WindowsSS();\r\n\r\n\t\tWindowsSSMethodNames.forEach((methodName) => {\r\n\t\t\tconst isSyncVariant = methodName.endsWith('Sync');\r\n\t\t\tconst baseMethodName = isSyncVariant ? methodName.replace(/Sync$/, '') : methodName;\r\n\t\t\tconst impl = edge.func({\r\n\t\t\t\tassemblyFile: 'SS',\r\n\t\t\t\ttypeName: 'SS.Bridge',\r\n\t\t\t\tmethodName: `Invoke${baseMethodName[0].toUpperCase()}${baseMethodName.substr(1)}`,\r\n\t\t\t});\r\n\r\n\t\t\tif (isSyncVariant) {\r\n\t\t\t\t// @ts-expect-error\r\n\t\t\t\tinstance[methodName] = (...args) => impl([...args], true);\r\n\t\t\t} else {\r\n\t\t\t\t// @ts-expect-error\r\n\t\t\t\tinstance[methodName] = async (...args) => new Promise<unknown>((resolve, reject) => {\r\n\t\t\t\t\timpl([...args], (err, res) => {\r\n\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\treject(err);\r\n\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tresolve(res);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn instance;\r\n\t}\r\n}\r\n\r\nexport interface WindowsSS {\r\n\tcaptureMonitorByIndex(deviceIndex: number, config?: Configuration): Promise<Buffer | null>;\r\n\tcaptureMonitorByIndexSync: UnpromisifyWindowsSS<'captureMonitorByIndex'>;\r\n\tcaptureMonitorByName(deviceName: string, config?: Configuration): Promise<Buffer | null>;\r\n\tcaptureMonitorByNameSync: UnpromisifyWindowsSS<'captureMonitorByName'>;\r\n\tcapturePrimaryMonitor(config: Configuration): Promise<Buffer | null>;\r\n\tcapturePrimaryMonitorSync: UnpromisifyWindowsSS<'capturePrimaryMonitor'>;\r\n\tcaptureWindowByTitle(title: string, config?: Configuration): Promise<Buffer | null>;\r\n\tcaptureWindowByTitleSync: UnpromisifyWindowsSS<'captureWindowByTitle'>;\r\n\tcaptureActiveWindow(config?: Configuration): Promise<Buffer | null>;\r\n\tcaptureActiveWindowSync: UnpromisifyWindowsSS<'captureActiveWindow'>;\r\n\tgetMonitorInfos(): MonitorInfo[];\r\n\tgetMonitorInfosSync: UnpromisifyWindowsSS<'getMonitorInfos'>;\r\n}\r\n\r\nexport const {\r\n\tcaptureMonitorByIndex,\r\n\tcaptureMonitorByIndexSync,\r\n\tcaptureMonitorByName,\r\n\tcaptureMonitorByNameSync,\r\n\tcapturePrimaryMonitor,\r\n\tcapturePrimaryMonitorSync,\r\n\tcaptureWindowByTitle,\r\n\tcaptureWindowByTitleSync,\r\n\tcaptureActiveWindow,\r\n\tcaptureActiveWindowSync,\r\n\tgetMonitorInfos,\r\n\tgetMonitorInfosSync,\r\n} = new WindowsSSFactory().create();\r\n"],"names":["fileURLToPath","pathTool","require$$0","require$$1","edge"],"mappings":"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"}